{"ast":null,"code":"var _jsxFileName = \"E:\\\\Conference_Room_Booking\\\\conference-room-booking\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst LOCAL_STORAGE_KEY = 'conference_room_user';\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(() => {\n    const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch {\n        return null;\n      }\n    }\n    return null;\n  });\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(user));\n    } else {\n      localStorage.removeItem(LOCAL_STORAGE_KEY);\n    }\n  }, [user]);\n  const login = (username, password) => {\n    // For now, only allow owner login with hardcoded credentials\n    if (username === 'owner' && password === 'password') {\n      const ownerUser = {\n        id: '1',\n        username: 'Owner',\n        isOwner: true\n      };\n      setUser(ownerUser);\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"E4exK0FWr6eXjdD1ZR+wPzfPJu0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","LOCAL_STORAGE_KEY","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","stored","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","login","username","password","ownerUser","id","isOwner","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Conference_Room_Booking/conference-room-booking/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\r\nimport { User } from '../types';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (username: string, password: string) => boolean;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nconst LOCAL_STORAGE_KEY = 'conference_room_user';\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(() => {\r\n    const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n    if (stored) {\r\n      try {\r\n        return JSON.parse(stored);\r\n      } catch {\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem(LOCAL_STORAGE_KEY);\r\n    }\r\n  }, [user]);\r\n\r\n  const login = (username: string, password: string): boolean => {\r\n    // For now, only allow owner login with hardcoded credentials\r\n    if (username === 'owner' && password === 'password') {\r\n      const ownerUser: User = {\r\n        id: '1',\r\n        username: 'Owner',\r\n        isOwner: true\r\n      };\r\n      setUser(ownerUser);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAaC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUzF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,MAAMC,iBAAiB,GAAG,sBAAsB;AAEhD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACK,WAAW,CAAC;EACvC,IAAIK,OAAO,KAAKJ,SAAS,EAAE;IACzB,MAAM,IAAIK,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc,MAAM;IAClD,MAAMgB,MAAM,GAAGC,YAAY,CAACC,OAAO,CAACZ,iBAAiB,CAAC;IACtD,IAAIU,MAAM,EAAE;MACV,IAAI;QACF,OAAOG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;MAC3B,CAAC,CAAC,MAAM;QACN,OAAO,IAAI;MACb;IACF;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,IAAIa,IAAI,EAAE;MACRG,YAAY,CAACI,OAAO,CAACf,iBAAiB,EAAEa,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLG,YAAY,CAACM,UAAU,CAACjB,iBAAiB,CAAC;IAC5C;EACF,CAAC,EAAE,CAACQ,IAAI,CAAC,CAAC;EAEV,MAAMU,KAAK,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAc;IAC7D;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,UAAU,EAAE;MACnD,MAAMC,SAAe,GAAG;QACtBC,EAAE,EAAE,GAAG;QACPH,QAAQ,EAAE,OAAO;QACjBI,OAAO,EAAE;MACX,CAAC;MACDd,OAAO,CAACY,SAAS,CAAC;MAClB,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBf,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMgB,KAAsB,GAAG;IAC7BjB,IAAI;IACJU,KAAK;IACLM,MAAM;IACNE,eAAe,EAAE,CAAC,CAAClB;EACrB,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,GAAA,CAnDWF,YAAyC;AAAA2B,EAAA,GAAzC3B,YAAyC;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}