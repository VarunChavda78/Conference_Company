{"ast":null,"code":"var _jsxFileName = \"E:\\\\Conference_Room_Booking\\\\conference-room-booking\\\\src\\\\context\\\\BookingContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingContext = /*#__PURE__*/createContext(undefined);\nexport const useBookings = () => {\n  _s();\n  const context = useContext(BookingContext);\n  if (context === undefined) {\n    throw new Error('useBookings must be used within a BookingProvider');\n  }\n  return context;\n};\n_s(useBookings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const BookingProvider = ({\n  children\n}) => {\n  _s2();\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const refreshBookings = async () => {\n    setLoading(true);\n    try {\n      const data = await apiService.getBookings();\n      const parsedBookings = data.map(b => ({\n        ...b,\n        createdAt: new Date(b.createdAt)\n      }));\n      setBookings(parsedBookings);\n    } catch (error) {\n      console.error('Error fetching bookings:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    refreshBookings();\n  }, []);\n  const addBooking = async bookingData => {\n    try {\n      const newBooking = await apiService.createBooking(bookingData);\n      setBookings(prev => [...prev, {\n        ...newBooking,\n        createdAt: new Date(newBooking.createdAt)\n      }]);\n    } catch (error) {\n      console.error('Error adding booking:', error);\n      throw error;\n    }\n  };\n  const getBookingsByDate = date => {\n    return bookings.filter(booking => booking.date === date);\n  };\n  const getBookingsByTimeRange = (date, startTime, endTime) => {\n    return bookings.filter(booking => booking.date === date && booking.startTime < endTime && booking.endTime > startTime);\n  };\n  const removeBooking = async id => {\n    try {\n      await apiService.deleteBooking(id);\n      setBookings(prev => prev.filter(booking => booking.id !== id));\n    } catch (error) {\n      console.error('Error removing booking:', error);\n      throw error;\n    }\n  };\n  const editBooking = async (id, updatedData) => {\n    try {\n      const updatedBooking = await apiService.updateBooking(id, updatedData);\n      setBookings(prev => prev.map(booking => booking.id === id ? {\n        ...booking,\n        ...updatedBooking,\n        createdAt: new Date(updatedBooking.createdAt)\n      } : booking));\n    } catch (error) {\n      console.error('Error updating booking:', error);\n      throw error;\n    }\n  };\n  const value = {\n    bookings,\n    addBooking,\n    getBookingsByDate,\n    getBookingsByTimeRange,\n    removeBooking,\n    editBooking,\n    refreshBookings,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(BookingContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s2(BookingProvider, \"UWhhxF84Mjq8sok1AfeZ59S8aLg=\");\n_c = BookingProvider;\nvar _c;\n$RefreshReg$(_c, \"BookingProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","BookingContext","undefined","useBookings","_s","context","Error","BookingProvider","children","_s2","bookings","setBookings","loading","setLoading","refreshBookings","data","getBookings","parsedBookings","map","b","createdAt","Date","error","console","addBooking","bookingData","newBooking","createBooking","prev","getBookingsByDate","date","filter","booking","getBookingsByTimeRange","startTime","endTime","removeBooking","id","deleteBooking","editBooking","updatedData","updatedBooking","updateBooking","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Conference_Room_Booking/conference-room-booking/src/context/BookingContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\r\nimport { Booking, BookingType } from '../types';\r\nimport { apiService } from '../services/api';\r\n\r\ninterface BookingContextType {\r\n  bookings: Booking[];\r\n  addBooking: (booking: Omit<Booking, 'id' | 'createdAt'>) => Promise<void>;\r\n  getBookingsByDate: (date: string) => Booking[];\r\n  getBookingsByTimeRange: (date: string, startTime: string, endTime: string) => Booking[];\r\n  removeBooking: (id: string) => Promise<void>;\r\n  editBooking: (id: string, updatedData: Partial<Omit<Booking, 'id' | 'createdAt'>>) => Promise<void>;\r\n  refreshBookings: () => Promise<void>;\r\n  loading: boolean;\r\n}\r\n\r\nconst BookingContext = createContext<BookingContextType | undefined>(undefined);\r\n\r\nexport const useBookings = () => {\r\n  const context = useContext(BookingContext);\r\n  if (context === undefined) {\r\n    throw new Error('useBookings must be used within a BookingProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface BookingProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const BookingProvider: React.FC<BookingProviderProps> = ({ children }) => {\r\n  const [bookings, setBookings] = useState<Booking[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const refreshBookings = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await apiService.getBookings();\r\n      const parsedBookings = data.map((b: any) => ({ \r\n        ...b, \r\n        createdAt: new Date(b.createdAt) \r\n      }));\r\n      setBookings(parsedBookings);\r\n    } catch (error) {\r\n      console.error('Error fetching bookings:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshBookings();\r\n  }, []);\r\n\r\n  const addBooking = async (bookingData: Omit<Booking, 'id' | 'createdAt'>) => {\r\n    try {\r\n      const newBooking = await apiService.createBooking(bookingData);\r\n      setBookings(prev => [...prev, { ...newBooking, createdAt: new Date(newBooking.createdAt) }]);\r\n    } catch (error) {\r\n      console.error('Error adding booking:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getBookingsByDate = (date: string): Booking[] => {\r\n    return bookings.filter(booking => booking.date === date);\r\n  };\r\n\r\n  const getBookingsByTimeRange = (date: string, startTime: string, endTime: string): Booking[] => {\r\n    return bookings.filter(booking => \r\n      booking.date === date && \r\n      booking.startTime < endTime && \r\n      booking.endTime > startTime\r\n    );\r\n  };\r\n\r\n  const removeBooking = async (id: string) => {\r\n    try {\r\n      await apiService.deleteBooking(id);\r\n      setBookings(prev => prev.filter(booking => booking.id !== id));\r\n    } catch (error) {\r\n      console.error('Error removing booking:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const editBooking = async (id: string, updatedData: Partial<Omit<Booking, 'id' | 'createdAt'>>) => {\r\n    try {\r\n      const updatedBooking = await apiService.updateBooking(id, updatedData);\r\n      setBookings(prev => prev.map(booking =>\r\n        booking.id === id ? { ...booking, ...updatedBooking, createdAt: new Date(updatedBooking.createdAt) } : booking\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error updating booking:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: BookingContextType = {\r\n    bookings,\r\n    addBooking,\r\n    getBookingsByDate,\r\n    getBookingsByTimeRange,\r\n    removeBooking,\r\n    editBooking,\r\n    refreshBookings,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <BookingContext.Provider value={value}>\r\n      {children}\r\n    </BookingContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}