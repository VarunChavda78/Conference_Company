{"ast":null,"code":"var _jsxFileName = \"E:\\\\Conference_Room_Booking\\\\conference-room-booking\\\\src\\\\context\\\\BookingContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { BookingType } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingContext = /*#__PURE__*/createContext(undefined);\nexport const useBookings = () => {\n  _s();\n  const context = useContext(BookingContext);\n  if (context === undefined) {\n    throw new Error('useBookings must be used within a BookingProvider');\n  }\n  return context;\n};\n_s(useBookings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst LOCAL_STORAGE_KEY = 'conference_room_bookings';\nexport const BookingProvider = ({\n  children\n}) => {\n  _s2();\n  const [bookings, setBookings] = useState(() => {\n    const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (stored) {\n      try {\n        const parsed = JSON.parse(stored);\n        // Convert date strings back to Date objects for createdAt\n        return parsed.map(b => ({\n          ...b,\n          createdAt: new Date(b.createdAt)\n        }));\n      } catch {\n        return [];\n      }\n    }\n    // Default sample booking\n    return [{\n      id: '1',\n      booker: 'Brijesh Bhai',\n      presenter: 'Brijesh Bhai',\n      type: BookingType.MEETING,\n      startTime: '12:00',\n      endTime: '14:00',\n      date: new Date().toISOString().split('T')[0],\n      title: 'Team Standup Meeting',\n      description: 'Daily team standup meeting',\n      numberOfPeople: 8,\n      createdAt: new Date()\n    }];\n  });\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(bookings));\n  }, [bookings]);\n  const addBooking = bookingData => {\n    const newBooking = {\n      ...bookingData,\n      id: Date.now().toString(),\n      createdAt: new Date()\n    };\n    setBookings(prev => [...prev, newBooking]);\n  };\n  const getBookingsByDate = date => {\n    return bookings.filter(booking => booking.date === date);\n  };\n  const getBookingsByTimeRange = (date, startTime, endTime) => {\n    return bookings.filter(booking => booking.date === date && booking.startTime < endTime && booking.endTime > startTime);\n  };\n  const value = {\n    bookings,\n    addBooking,\n    getBookingsByDate,\n    getBookingsByTimeRange\n  };\n  return /*#__PURE__*/_jsxDEV(BookingContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s2(BookingProvider, \"gJFV1fPpJBvRPlDRvYkImBtPu6g=\");\n_c = BookingProvider;\nvar _c;\n$RefreshReg$(_c, \"BookingProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","BookingType","jsxDEV","_jsxDEV","BookingContext","undefined","useBookings","_s","context","Error","LOCAL_STORAGE_KEY","BookingProvider","children","_s2","bookings","setBookings","stored","localStorage","getItem","parsed","JSON","parse","map","b","createdAt","Date","id","booker","presenter","type","MEETING","startTime","endTime","date","toISOString","split","title","description","numberOfPeople","setItem","stringify","addBooking","bookingData","newBooking","now","toString","prev","getBookingsByDate","filter","booking","getBookingsByTimeRange","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Conference_Room_Booking/conference-room-booking/src/context/BookingContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\r\nimport { Booking, BookingType } from '../types';\r\n\r\ninterface BookingContextType {\r\n  bookings: Booking[];\r\n  addBooking: (booking: Omit<Booking, 'id' | 'createdAt'>) => void;\r\n  getBookingsByDate: (date: string) => Booking[];\r\n  getBookingsByTimeRange: (date: string, startTime: string, endTime: string) => Booking[];\r\n}\r\n\r\nconst BookingContext = createContext<BookingContextType | undefined>(undefined);\r\n\r\nexport const useBookings = () => {\r\n  const context = useContext(BookingContext);\r\n  if (context === undefined) {\r\n    throw new Error('useBookings must be used within a BookingProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface BookingProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst LOCAL_STORAGE_KEY = 'conference_room_bookings';\r\n\r\nexport const BookingProvider: React.FC<BookingProviderProps> = ({ children }) => {\r\n  const [bookings, setBookings] = useState<Booking[]>(() => {\r\n    const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n    if (stored) {\r\n      try {\r\n        const parsed = JSON.parse(stored);\r\n        // Convert date strings back to Date objects for createdAt\r\n        return parsed.map((b: any) => ({ ...b, createdAt: new Date(b.createdAt) }));\r\n      } catch {\r\n        return [];\r\n      }\r\n    }\r\n    // Default sample booking\r\n    return [\r\n      {\r\n        id: '1',\r\n        booker: 'Brijesh Bhai',\r\n        presenter: 'Brijesh Bhai',\r\n        type: BookingType.MEETING,\r\n        startTime: '12:00',\r\n        endTime: '14:00',\r\n        date: new Date().toISOString().split('T')[0],\r\n        title: 'Team Standup Meeting',\r\n        description: 'Daily team standup meeting',\r\n        numberOfPeople: 8,\r\n        createdAt: new Date()\r\n      }\r\n    ];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(bookings));\r\n  }, [bookings]);\r\n\r\n  const addBooking = (bookingData: Omit<Booking, 'id' | 'createdAt'>) => {\r\n    const newBooking: Booking = {\r\n      ...bookingData,\r\n      id: Date.now().toString(),\r\n      createdAt: new Date()\r\n    };\r\n    setBookings(prev => [...prev, newBooking]);\r\n  };\r\n\r\n  const getBookingsByDate = (date: string): Booking[] => {\r\n    return bookings.filter(booking => booking.date === date);\r\n  };\r\n\r\n  const getBookingsByTimeRange = (date: string, startTime: string, endTime: string): Booking[] => {\r\n    return bookings.filter(booking => \r\n      booking.date === date && \r\n      booking.startTime < endTime && \r\n      booking.endTime > startTime\r\n    );\r\n  };\r\n\r\n  const value: BookingContextType = {\r\n    bookings,\r\n    addBooking,\r\n    getBookingsByDate,\r\n    getBookingsByTimeRange\r\n  };\r\n\r\n  return (\r\n    <BookingContext.Provider value={value}>\r\n      {children}\r\n    </BookingContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}